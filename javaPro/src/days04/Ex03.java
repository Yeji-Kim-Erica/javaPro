package days04;

/**
 * @author yejikim
 * @date 2025. 2. 6. - 오전 11:19:28
 * @subject [] 연산자, 배열
 * @content [] : 인덱스(index) 연산자
 */
public class Ex03 {

	public static void main(String[] args) { // String 배열 args
		
		// 한 학생의 국어점수를 저장할 변수를 선언
		int kor = 0;
		// 100명 학생의 국어점수를 저장할 변수를 선언하려면? index가 필요함
		
		// 1. 배열(array)의 정의 : 동일한 자료형을 메모리 상에 연속적으로 놓이게 한 것 -> index를 사용할 수 있는 경우
		// 	ㄴ 참조형(Reference Type)의 한 종류이다.
		
		// 2. 배열 선언 형식
		//	자료형 [] 변수명/배열명;
		//	new 자료형[배열크기];
		int [] kors; // int 배열 kors
		kors = new int[100];
		
		// 배열크기를 보는 메서드: .length
		// 배열명.length
		int size = kors.length;
		System.out.println(size); // 출력결과: 100
		
		kors[0] = 90;
		kors[1]= 67;
		
		// 선언하고 나면 자료를 저장할 만큼의 기억공간이 생기고, 변수명이 기억공간의 이름이 된다.
		/*
		 * heap (동적 영역)
		 * 아랫첨자값			 			  		  윗첨자값 (= 배열크기 - 1)
		 * LowerBound								   UpperBound
		 * 	0	  1       2							       99
		 * [90]  [67]  [4바이트]  [실제 데이터가 들어가는 곳]...[4바이트] : 총 100개
		 * 100번지,101번지...
		 * 0번째 요소, 1번째 요소... 요소는 영어로 Element
		 * 0번째 요소: 90, 1번째 요소: 67...
		 * 
		 * 배열명[첨자값]
		 * 
		 * 0x100번지 -> 첨자값은 0임.
		 * 시작주소만 알면 나머지 주소도 찾을 수 있음
		 * 시작주소: 첫번째 주소 (100번지)
		 * 
		 * stack
		 * [ 배열의 시작주소값 ] -> kors: 변수/참조변수/지역변수/배열명
		 * [ 0x100 ]
		 * 
		 */
		// 예시
		/* 100명을 수용할 창고를 구매한다고 할 때
		 * 
		 * 집도 용도별로 구조가 나눠짐.
		 * 메모리 저장공간도 용도에 따라 공간이 나뉘어서 저장됨
		 * 
		 * heap (동적 영역)
		 * 
		 * stack
		 * [ 경기도 양평 ]
		 * 
		 */
		
		
	}
	
}
