1. "싱글톤 클래스"를 구현하는 방법에 대해서 설명하세요...

	[싱글톤 패턴]
	 ㄴ 애플리케이션에서 오직 1개만 객체(인스턴스)를 생성하는 패턴.
	 
	[구현 방법]
	 1) private 생성자 선언: 외부에서 new 객체 생성 불가
	 2) private static 필드 선언: private static volatile A obj;
	 3) public synchronized A getInstance(){ // 메서드 동기화
	 	  if (obj == null)
	 		  obj = new A();
	 	  return obj;
	    }
	  4) 멀티스레드 안전

	1) 필드에서 new 연산자로 객체를 생성하고, 생성자의 접근제어자는 private을 줘서 새로운 객체의 생성을 막는다.
		그리고 메소드를 이용해 생성된 객체에 접근할 수 있도록한다. (return 객체의 참조변수;)
		- 이 방법은 인스턴스를 생성할 필요가 없을 때도 프로그램의 실행과 동시에 생성되어 메모리의 낭비를 초래할 수 있다.
	2) 필드에서는 값을 null로 객체를 선언. 생성자의 접근제어자는 private을 준다.
		메소드에서 if구문을 통해 만일 객체가 아직 생성되지 않아 값이 null일 경우
		새로운 객체를 생성한다는 인스턴스화 식을 사용해 객체를 생성한다.
		reutrn 값을 객체의 참조변수로 주어 생성된 객체에 접근한다.
		- 이 방법은 멀티스레드에서 접근 시, 메소드 실행 타이밍이 동일할 경우 if 구문의 조건문 결과가 true가 되므로
		  동시에 2개 이상의 객체가 생성될 우려가 있다.
	3) 필드: 객체 = null; 생성자의 접근제어자: private.
		메소드에서 synchronized (동기화) 잠금장치를 이용해 멀티스레드에서 동시에 접근 시,
		해당 메소드에 하나의 스레드가 진입하면 메소드를 잠궈서 해당 메소드에 2개 이상의 스레드가 동시에 접근하는 것을 막는다.
		- 이 방법은 하나의 스레드가 진입할 시, 인스턴스 생성/반환 메소드가 잠기므로 속도가 느려지는 단점이 있다.
	4) 필드: 객체 = null; 생성자의 접근제어자: private.
		메소드 내에 if else구문을 주고 if 조건이 참일 때 시행되는 {} 안에 if구문을 하나 더 삽입한다.
		해당 if구문에 synchronized (동기화) 잠금장치를 주어 잠금 기능은 여전히 활용하되, 스레드들의 진입속도가 느려지는 것을 막는다.

2. instanceof 연산자에 대해서 설명하세요.
	- 설명: 객체가 어떤 클래스 타입인지 여부 true/false
	- 사용법
		객체명 instanceof 클래스타입
	- 주의할 점: 항상 자식 클래스 타입부터 일치 여부를 물어야 한다.
		
	instanceof 연산자는 인스턴스의 자료형이 일치하는지를 확인할 때 사용하는 연산자이다.
	
 
3. [매개변수 다형성]에 대해서 설명하세요.
	매개변수의 자료형으로 상위클래스를 사용하면 
	해당 클래스에 속한 하위클래스(자식클래스)들을 모두 매개변수로 사용할 수 있는 것을 말한다.
 
4. [] 대괄호 안에 있다. 없다 골라서 적으세요.
  1) 메서드에 static과 abstract를 함께 사용할 수 [없다].
  		static키워드: 클래스 메서드(정적, static)
  2) 클래스에 static과 final을 동시에 사용할 수 [있다]. 따로는 static 단독 사용 불가 (중첩 클래스 아닐시)
  		static class: 중첩클래스에서만 선언 가능
  		final class: 최종 클래스 선언
  3) abstract메서드의 접근 제어자가 private일 수 [없다]. 
  4) 메서드에 private과 final을 같이 사용할 필요 [없다]. (선언은 가능하긴 함)
  	final 메서드: 재정의할 수 없는 메소드
  	private 메서드: 해당 클래스 안에서만 호출되는 메서드. 외부 공개 X
  
5. 클래스(OOP)의 특징에 대해서 상세히 설명하세요.
	1) 캡슐화(은닉화)
	2) 상속성
	3) 추상화
	4) 다형성
 
6. abstract 키워드에 대해서 설명하세요.
	추상클래스, 추상메소드에서 사용된다. 미완성의 의미를 가지고 있다.
	추상메서드: {} 몸체가 구현되지 않은 불완전한 메서드. 물려받은 자식이 반드시 재정의해서 사용해야 한다.
 
7. 인터페이스(interface) 에 대해서 상세히 설명하세요.
	공통된 기능을 여러 클래스에서 구현해야 할 때 사용한다. 일종의 추상클래스.
	추상 메소드, 상수만을 가지고 있으나 JDK1.8부터는 default, static 메소드도 사용 가능하다.
	
	- 정의: 
 	- 상속:
 	- 구현:
 	- 특징:



